name: Build
on: [pull_request, push]

jobs:
  build_plugin:
    name: Build Minecraft mod
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        java: [17]
    defaults:
      run:
        working-directory: ./plugin
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}

      - uses: burrunan/gradle-cache-action@v1
        name: Build mod
        with:
          arguments: build
          build-root-directory: ./plugin

      - name: Capture build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Mod
          path: plugin/build/libs/*jar

  build_fuse:
    name: Build FUSE filesystem
    runs-on: ubuntu-20.04
    steps:
      - name: Install FUSE deps
        run: sudo apt install -y fuse3 libfuse3-dev

      - name: Checkout repo
        uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true

      - name: Run tests
        run: cargo test --workspace

      - name: Build
        run: |
          cargo build --bin minecraft-fs --release
          strip target/release/minecraft-fs
          chmod +x target/release/minecraft-fs

      - name: Capture build artifact
        uses: actions/upload-artifact@v2
        with:
          name: FUSE
          path: target/release/minecraft-fs

  create_release:
    name: Create release
    runs-on: ubuntu-20.04
    needs: [build_fuse, build_plugin]
    if: contains(github.event.head_commit.message, 'make_release') && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: download
      - name: Tar up artifacts
        run: |
          mkdir dist
          mv download/FUSE/minecraft-fs dist
          mv download/Mod/*jar dist
          tar -C dist -cvzf minecraft-fs.tar.gz .
      - name: Create release
        id: do_create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{ github.ref }}"
          release_name: "Release ${{ github.ref }}, build ${{ github.run_number }}"
          prerelease: true
          draft: true # draft by default to be manually published if it's exciting
      - name: Upload artifacts to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.do_create_release.outputs.upload_url }}
          asset_path: minecraft-fs.tar.gz
          asset_name: minecraft-fs.tar.gz
          asset_content_type: application/gzip

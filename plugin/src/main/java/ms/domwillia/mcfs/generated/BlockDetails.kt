// automatically generated by the FlatBuffers compiler, do not modify

package MCFS

import java.nio.*
import kotlin.math.sign
import com.google.flatbuffers.*

@Suppress("unused")
@ExperimentalUnsignedTypes
class BlockDetails : Struct() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : BlockDetails {
        __init(_i, _bb)
        return this
    }
    val hasColor : Boolean get() = 0.toByte() != bb.get(bb_pos + 0)
    companion object {
        fun createBlockDetails(builder: FlatBufferBuilder, hasColor: Boolean) : Int {
            builder.prep(1, 1)
            builder.putBoolean(hasColor)
            return builder.offset()
        }
    }
}
